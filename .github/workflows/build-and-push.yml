name: Build and Push to ECR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: dev-kitchensink
  IMAGE_TAG: latest

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: arn:aws:iam::083732173806:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-${{ github.run_id }}

      - name: Debug AWS configuration
        run: |
          echo "AWS_REGION: ${{ env.AWS_REGION }}"
          echo "AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}"
          echo "AWS_ROLE_ARN: ${{ env.AWS_ROLE_ARN }}"
          echo "AWS_WEB_IDENTITY_TOKEN_FILE: ${{ env.AWS_WEB_IDENTITY_TOKEN_FILE }}"
          echo "AWS_ROLE_SESSION_NAME: ${{ env.AWS_ROLE_SESSION_NAME }}"
          echo "Repository: ${{ github.repository }}"
          echo "Run ID: ${{ github.run_id }}"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f deployment/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Force new deployment
        run: |
          aws ecs update-service --cluster kitchensink-dev-cluster --service kitchensink-dev-app --force-new-deployment 